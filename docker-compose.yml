version: '3.8'

services:
  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: chat-ecosystem-db
    env_file:
      - mssql.env
    ports:
      - "5400:1433"
    healthcheck:
      test: ["CMD-SHELL", "sqlcmd -S localhost -U sa -P Your_password123 -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  # gateway:
  #   build:
  #     context: .
  #     dockerfile: Gateway/ChatEcoSystem.Gateway/Dockerfile
  #   container_name: chat-ecosystem-gateway
  #   volumes:
  #     - ./configs/ocelot.json:/app/ocelot.json
  #   ports:
  #     - "8080:80"
  #   env_file:
  #     - gateway.env

  # auth-api:
  #   build:
  #     context: .
  #     dockerfile: AuthService/ChatEcoSystem.Auth.Api/Dockerfile
  #   container_name: chat-ecosystem-auth-api
  #   env_file:
  #     - auth-service.env
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   ports:
  #     - "5000:5000"
  #     - "5001:5001" 
  
  # chat-api:
  #   build:
  #     context: .
  #     dockerfile: ChatService/ChatEcoSystem.Chat.Api/Dockerfile
  #   container_name: chat-ecosystem-chat-api
  #   env_file:
  #     - chat-service.env
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   ports:
  #     - "5002:5002"
  #     - "5003:5003"
  
  # notification:
  #   build:
  #       context: .
  #       dockerfile: NotificationService/ChatEcoSystem.Notification.Worker/Dockerfile
  #   container_name: chat-ecosystem-notification-worker
  #   env_file:
  #       - notification-service.env
  #   depends_on:
  #       db:
  #         condition: service_healthy

  # webapp:
  #   build:
  #     context: .
  #     dockerfile: UI/ChatEcoSystem.WebApp/Dockerfile
  #   container_name: chat-ecosystem-webapp
  #   ports:
  #     - "8081:80"
  #   depends_on:
  #     - gateway
  #   env_file:
  #     - webapp.env
  gateway:
    image: chatecosystemgateway
    container_name: chat-ecosystem-gateway
    volumes:
      - ./configs/ocelot.json:/app/ocelot.json
    ports:
      - "8080:80"
    env_file:
      - gateway.env

  auth-api:
    image: chatecosystemauthapi
    container_name: chat-ecosystem-auth-api
    env_file:
      - auth-service.env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5000:5000"
  
  chat-api:
    image: chatecosystemchatapi
    container_name: chat-ecosystem-chat-api
    env_file:
      - chat-service.env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5002:5002"
  
  notification:
    image: chatecosystemnotificationworker
    container_name: chat-ecosystem-notification-worker
    env_file:
        - notification-service.env
    depends_on:
        db:
          condition: service_healthy

  webapp:
    image: chatecosystemwebapp
    container_name: chat-ecosystem-webapp
    ports:
      - "8081:80"
    depends_on:
      - gateway
    env_file:
      - webapp.env
